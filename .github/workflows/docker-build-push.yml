name: Docker Build and Push

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          base: ${{ github.ref }}
          filters: |
            php_apache:
              - 'php-apache/**'
            php_fpm:
              - 'php-fpm/**'
            5_5:
              - 'php-fpm/5.5.Dockerfile'
              - 'php-fpm/5.5.DockerFile'
            7_0:
              - 'php-fpm/7.0.Dockerfile'
              - 'php-fpm/7.0.DockerFile'
            7_0_alpine:
              - 'php-fpm/7.0-alpine.Dockerfile'
              - 'php-fpm/7.0-alpine.DockerFile'
            7_1:
              - 'php-fpm/7.1.Dockerfile'
              - 'php-fpm/7.1.DockerFile'
            7_1_alpine:
              - 'php-fpm/7.1-alpine.Dockerfile'
              - 'php-fpm/7.1-alpine.DockerFile'
            7_2:
              - 'php-fpm/7.2.Dockerfile'
              - 'php-fpm/7.2.DockerFile'
            7_2_alpine:
              - 'php-fpm/7.2-alpine.Dockerfile'
              - 'php-fpm/7.2-alpine.DockerFile'
            7_3:
              - 'php-fpm/7.3.Dockerfile'
              - 'php-fpm/7.3.DockerFile'
            7_3_alpine:
              - 'php-fpm/7.3-alpine.Dockerfile'
              - 'php-fpm/7.3-alpine.DockerFile'
            7_4:
              - 'php-fpm/7.4.Dockerfile'
              - 'php-fpm/7.4.DockerFile'
            7_4_alpine:
              - 'php-fpm/7.4-alpine.Dockerfile'
              - 'php-fpm/7.4-alpine.DockerFile'
            7_4_progress:
              - 'php-fpm/7.4-progress.Dockerfile'
              - 'php-fpm/7.4-progress.DockerFile'
            8_0:
              - 'php-fpm/8.0.Dockerfile'
              - 'php-fpm/8.0.DockerFile'
            8_0_alpine:
              - 'php-fpm/8.0-alpine.Dockerfile'
              - 'php-fpm/8.0-alpine.DockerFile'
            8_1:
              - 'php-fpm/8.1.Dockerfile'
              - 'php-fpm/8.1.DockerFile'
            8_1_alpine:
              - 'php-fpm/8.1-alpine.Dockerfile'
              - 'php-fpm/8.1-alpine.DockerFile'
            8_2:
              - 'php-fpm/8.2.Dockerfile'
              - 'php-fpm/8.2.DockerFile'
            8_2_alpine:
              - 'php-fpm/8.2-alpine.Dockerfile'
              - 'php-fpm/8.2-alpine.DockerFile'

      - id: set-matrix
        run: |
          CHANGES=$(echo '${{ toJSON(steps.changes.outputs) }}' | jq -r 'to_entries | map(select(.value == "true")) | map(.key) | join(",")')
          echo "matrix={\"version\":[\"${CHANGES//,/\",\"}\"]}" >> $GITHUB_OUTPUT

  build-and-push:
    needs: changes
    if: ${{ needs.changes.outputs.matrix != '{"version":[]}' }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.changes.outputs.matrix)}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Prepare Docker tag and file
        id: prepare
        run: |
          VERSION="${{ matrix.version }}"
          if [ -z "$VERSION" ]; then
            echo "Error: Version is empty"
            exit 1
          fi

          DOCKER_TAG="${VERSION//_/.}"
          if [[ "$VERSION" == *"alpine"* ]]; then
            DOCKERFILE="php-fpm/${DOCKER_TAG%-alpine}.Dockerfile"
            IMAGE_NAME="ejklock/php-fpm-alpine:${DOCKER_TAG%-alpine}"
          elif [[ "$VERSION" == "php_fpm" ]]; then
            DOCKERFILE="php-fpm/Dockerfile"
            IMAGE_NAME="ejklock/php-fpm:latest"
          elif [[ "$VERSION" == "php_apache" ]]; then
            DOCKERFILE="php-apache/Dockerfile"
            IMAGE_NAME="ejklock/php-apache:latest"
          else
            DOCKERFILE="php-fpm/${DOCKER_TAG}.Dockerfile"
            IMAGE_NAME="ejklock/php-fpm:${DOCKER_TAG}"
          fi

          if [ ! -f "$DOCKERFILE" ]; then
            echo "Error: Dockerfile not found: $DOCKERFILE"
            exit 1
          fi

          echo "dockerfile=$DOCKERFILE" >> $GITHUB_OUTPUT
          echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: ${{ contains(steps.prepare.outputs.dockerfile, 'php-apache') && './php-apache' || './php-fpm' }}
          file: ${{ steps.prepare.outputs.dockerfile }}
          push: true
          tags: ${{ steps.prepare.outputs.image_name }}
